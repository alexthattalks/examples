- name: Generate patching data for executive dashboard
  hosts: all

  vars:
    aap_host: aap-controller.asm.network
    
  tasks:
    - name: Find updateable packages for each host
      ansible.builtin.yum:
        list: updates
      register: updates

    - name: Find total packages for each host
      ansible.builtin.yum:
        list: installed
      register: installed

    - name: Create updateable_packages dictionary
      ansible.builtin.set_fact:
        updateable_packages: "{{ updates.results }}" 

    - name: Create installed_packages dictionary
      ansible.builtin.set_fact:
        installed_packages: "{{ installed.results }}"

    - name: Ensure tmp file exists for processing
      ansible.builtin.copy:
        content: ""
        dest: /var/lib/awx/public/static/patching_compliance.tmp
        force: yes
        group: awx
        owner: root
        mode: 0644
      run_once: true
      delegate_to: "{{ aap_host }}"

    - name: Ensure tmp2 file exists for processing
      ansible.builtin.copy:
        content: ""
        dest: /var/lib/awx/public/static/patching_compliance.tmp2
        force: yes
        group: awx
        owner: root
        mode: 0644
      run_once: true
      delegate_to: "{{ aap_host }}"

    - name: Ensure txt file exists for final result
      ansible.builtin.copy:
        content: ""
        dest: /var/lib/awx/public/static/patching_compliance_latest.txt
        force: yes
        group: awx
        owner: root
        mode: 0644
        backup: true
      run_once: true
      delegate_to: "{{ aap_host }}"

    - name: Add each host block to tmp file
      ansible.builtin.blockinfile:
        marker: ""
        insertafter: EOF
        dest: /var/lib/awx/public/static/patching_compliance.tmp
        block: "{{ lookup('template', 'host_template.j2') }}"
      delegate_to: "{{ aap_host }}"
      throttle: 1

    - name: Remove white lines from tmp file and publish to final result
      ansible.builtin.shell: sed '/^$/d' /var/lib/awx/public/static/patching_compliance.tmp > /var/lib/awx/public/static/patching_compliance.tmp2
      run_once: true
      delegate_to: "{{ aap_host }}"

    - ansible.builtin.set_fact:
        host_list: []
      run_once: true
      delegate_to: "{{ aap_host }}"

    - name: add to list
      ansible.builtin.set_fact:
        host_list: "{{ host_list + [item] }}"
      run_once: true
      delegate_to: "{{ aap_host }}"
      loop: "{{ lookup('ansible.builtin.url', 'https://'+'{{ aap_host }}'+'/static/patching_compliance.tmp2', validate_certs=False).splitlines() }}"

    - ansible.builtin.debug:
        msg: "{{ host_list }}"
      run_once: true 
      delegate_to: "{{ aap_host }}"

    - ansible.builtin.copy:
        content: "{{ host_list }}"
        dest: /var/lib/awx/public/static/patching_compliance.tmp
      run_once: true
      delegate_to: "{{ aap_host }}"

    - name: Remove double quotes 
      ansible.builtin.shell: sed 's/\"//g' /var/lib/awx/public/static/patching_compliance.tmp > /var/lib/awx/public/static/patching_compliance.tmp2
      run_once: true
      delegate_to: "{{ aap_host }}"

    - name: Change single quotes to double quotes
      ansible.builtin.shell: sed 's/'\''/"/g' /var/lib/awx/public/static/patching_compliance.tmp2 > /var/lib/awx/public/static/patching_compliance_latest.txt
      run_once: true
      delegate_to: "{{ aap_host }}"  
      
    - name: Ensure tmp file is removed after processing
      ansible.builtin.file:
        dest: /var/lib/awx/public/static/patching_compliance.tmp
        state: absent
      run_once: true
      delegate_to: "{{ aap_host }}"

    - name: Ensure tmp2 file is removed after processing
      ansible.builtin.file:
        dest: /var/lib/awx/public/static/patching_compliance.tmp2
        state: absent
      run_once: true
      delegate_to: "{{ aap_host }}"
      
    - ansible.builtin.debug: 
        msg: "Visit the following URL for the report: https://{{ aap_host }}/static/patching_compliance_latest.txt"
      run_once: true
      delegate_to: "{{ aap_host }}"
