- name: Delete Date Filter
  # start off fresh by deleting existing filters
  redhat.satellite.content_view_filter:
    name: "INCLUDE TO DATE"
    organization: "{{ org_name }}"
    content_view: "{{ primary_content_view }}"
    filter_type: "erratum"
    filter_state: "absent"
    
- name: Delete RPM Filter
  redhat.satellite.content_view_filter:
    name: "RPM WITHOUT ERRATA"
    organization: "{{ org_name }}"
    content_view: "{{ primary_content_view }}"
    filter_type: "rpm"
    filter_state: "absent"
    
- name: Delete Errata Filter
  redhat.satellite.content_view_filter:
    name: "SPECIFIC ERRATA"
    organization: "{{ org_name }}"
    content_view: "{{ primary_content_view }}"
    errata_id: "{{ errata_id }}"
    filter_type: "erratum"
    filter_state: "absent"

- name: Update Include Erratum To Date Filter
  # Create/update filter locking erratum content to a specific date
  redhat.satellite.content_view_filter:
    name: "INCLUDE TO DATE"
    organization: "{{ org_name }}"
    content_view: "{{ primary_content_view }}"
    filter_type: "erratum"
    # End date from survey
    end_date: "{{ end_date }}"
    date_type: "updated"
    inclusion: "yes"
  when: end_date|length != 0
    
- name: Update Include Packages without Errata
  # Create/update filter including packages without any errata (original packages)
  redhat.satellite.content_view_filter:
    name: "RPM WITHOUT ERRATA"
    organization: "{{ org_name }}"
    content_view: "{{ primary_content_view }}"
    filter_type: "rpm"
    original_packages: "yes"
    rule_state: "absent"
    inclusion: "yes"
  when: end_date|length != 0
    
- name: Update Include Specific Erratum
  # Create filter adding in specific errata AFTER the locked date above
  redhat.satellite.content_view_filter:
    name: "SPECIFIC ERRATA"
    organization: "{{ org_name }}"
    content_view: "{{ primary_content_view }}"
    filter_type: "erratum"
    # Errata ID from survey
    errata_id: "{{ errata_id }}"
    inclusion: "yes"
  when: end_date|length != 0
